@using LunchLibrary.Models
@using Newtonsoft.Json;
@using System.Web;

@model IEnumerable<LunchLibrary.Models.Place>

@{
    Owner owner = ViewBag.Owner as Owner;
    ViewData["Title"] = "점심고르기";
    List<Address> addresses = ViewBag.AddressList;
}

<script type="text/javascript">
    $(document).ready(function () {
        $("#selectLunch").click(function () {
        });
    });

    function DeleteCreatedPlace(itemString, btnObject) {
        var rowCount = parseInt(btnObject.id.replace("deletePlaceButton_", ""));
        if (!confirm("정말로 해당 장소를 삭제하시겠습니까?")) {
            return;
        }
        var resultData = ExecuteAjax("POST", "/Lunch/DeletePlace", "json", "application/json", itemString);

        if (resultData) {
            alert("삭제하였습니다.");
            document.getElementById("placeTR_" + rowCount).outerHTML = "";
        }
    }

    function GetRandom() {
        var selectedValue = GetSelectedAddress();
        var resultData = ExecuteAjax("POST", "/Lunch/GetRandom", "json", "application/json", JSON.stringify(selectedValue));
        if (resultData.Location == null || resultData.Location == "") {
            resultData.Location = "";
            $("#lunchLocationWrapper").hide();
        }
        $("#lunchName").text(" [ " + resultData.Name + " ] ");
        $("#lunchLocation").text(" [ " + resultData.Location + " ] ");
        $("#selectLunch").prop("disabled", "disabled");
        $("#successAlert").show();

        window.scrollTo(0, $("#successAlert").scrollTop());
    }
    function OnChangedAddress() {
        var selectedValue = GetSelectedAddress();

        location.href = "?id=" + "@(LunchLibrary.UtilityLauncher.ConvertGuidToBase64(owner.Id))" + "&addressId=" + selectedValue;
    }

    function MoveCreatePlace() {
        var selectedValue = GetSelectedAddress();
        console.log(selectedValue);
        location.href = "/Lunch/CreatePlace?addressId=" + selectedValue;
    }

    function GetSelectedAddress() {
        var selectBox = document.getElementById("addressSelect");
        var selectedValue = selectBox.options[selectBox.selectedIndex].value;
        return selectedValue;
    }
</script>

<div class="row">
    <div class="col-lg-8 col-md-8 col-sm-12 offset-lg-2 offset-md-2">
        <h2>점심을 골라봅시다.</h2>
    </div>
</div>

<div class="row">
    <div class="col-lg-8 col-md-8 col-sm-12 offset-lg-2 offset-md-2">
        <div id="successAlert" class="alert alert-success" role="alert" style="display:none;">
            <div>
                오늘의 점심 장소는 - <span class="h5" id="lunchName"></span> 입니다.
            </div>
            <div id="lunchLocationWrapper">
                <br />
                위치는 - <span class="h6" id="lunchLocation"></span> 입니다.
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-8 col-md-8 col-sm-12 offset-lg-2 offset-md-2">

        <select class="form-control" id="addressSelect" onchange="OnChangedAddress();">
            @{
                for (int i = 0; i < addresses.Count; i++)
                {

                    if (addresses[i].IsForeground)
                    {
                        <!option selected="selected"
                                value="@HttpUtility.UrlEncode(LunchLibrary.UtilityLauncher.ConvertGuidToBase64(addresses[i].Id))">
                            @addresses[i].Name
                        </!option>
                    }
                    else
                    {
                        <!option value="@HttpUtility.UrlEncode(LunchLibrary.UtilityLauncher.ConvertGuidToBase64(addresses[i].Id))">
                            @addresses[i].Name
                        </!option>
                    }
                }
            }

        </select>
    </div>
</div>

<div class="row">
    <div class="col-lg-8 col-md-8 col-sm-12 offset-lg-2 offset-md-2">
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">이름</th>
                    <th scope="col">위치</th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null)
                {
                    int i = 0;
                    @foreach (Place item in Model)
                    {
                        <tr id="placeTR_@i">
                            <th scope="row">@(i + 1)</th>
                            <td>@item.Name</td>
                            <td>@item.Location</td>
                            <td>
                                <button type="button" id="deletePlaceButton_@i"
                                        class="btn btn-danger float-right"
                                        onclick="DeleteCreatedPlace('@JsonConvert.SerializeObject(item)',this);">
                                    제거
                                </button>
                            </td>
                        </tr>
                        i++;
                    }
                }
            </tbody>
        </table>
    </div>
    <hr />
</div>
<div class="row">
    <div class="col-lg-2 col-md-2 col-sm-12 offset-lg-2 offset-md-2" style="margin-top:10px;">
        <button type="button" id="selectLunch" class="btn btn-primary btn-block" onclick="GetRandom();">점심 고르기</button>
    </div>
    <div class="col-lg-2 col-md-2 col-sm-12" style="margin-top:10px;">
        <button class="btn btn-secondary btn-block" onclick="MoveCreatePlace();">식당 입력</button>
    </div>
    <div class="col-lg-2 col-md-2 col-sm-12" style="margin-top:10px;">
        <a href="/Lunch/UpsertAddress" class="btn btn-secondary btn-block">주소 입력</a>

    </div>
</div>
